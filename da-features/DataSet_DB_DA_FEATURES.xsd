<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet_DB_DA_FEATURES" targetNamespace="http://tempuri.org/DataSet_DB_DA_FEATURES.xsd" xmlns:mstns="http://tempuri.org/DataSet_DB_DA_FEATURES.xsd" xmlns="http://tempuri.org/DataSet_DB_DA_FEATURES.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DB_DA_FEATURESConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DB_DA_FEATURESConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.da_features.Properties.Settings.GlobalReference.Default.DB_DA_FEATURESConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DB_DA_FEATURESConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DB_DA_FEATURESConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.da_features.Properties.Settings.GlobalReference.Default.DB_DA_FEATURESConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="KeSachTableAdapter" GeneratorDataComponentClassName="KeSachTableAdapter" Name="KeSach" UserDataComponentName="KeSachTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_DA_FEATURESConnectionString1 (Settings)" DbObjectName="DB_DA_FEATURES.dbo.KeSach" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[KeSach] WHERE (([MaKeSach] = @Original_MaKeSach) AND ((@IsNull_TenKeSach = 1 AND [TenKeSach] IS NULL) OR ([TenKeSach] = @Original_TenKeSach)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenKeSach" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenKeSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenKeSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[KeSach] ([TenKeSach]) VALUES (@TenKeSach);
SELECT MaKeSach, TenKeSach FROM KeSach WHERE (MaKeSach = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenKeSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenKeSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaKeSach, TenKeSach FROM dbo.KeSach</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[KeSach] SET [TenKeSach] = @TenKeSach WHERE (([MaKeSach] = @Original_MaKeSach) AND ((@IsNull_TenKeSach = 1 AND [TenKeSach] IS NULL) OR ([TenKeSach] = @Original_TenKeSach)));
SELECT MaKeSach, TenKeSach FROM KeSach WHERE (MaKeSach = @MaKeSach)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenKeSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenKeSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenKeSach" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenKeSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenKeSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MaKeSach" ColumnName="MaKeSach" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaKeSach" DataSetColumn="MaKeSach" />
              <Mapping SourceColumn="TenKeSach" DataSetColumn="TenKeSach" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SachTableAdapter" GeneratorDataComponentClassName="SachTableAdapter" Name="Sach" UserDataComponentName="SachTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_DA_FEATURESConnectionString1 (Settings)" DbObjectName="DB_DA_FEATURES.dbo.Sach" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sach] WHERE (([MaSach] = @Original_MaSach) AND ((@IsNull_TenSach = 1 AND [TenSach] IS NULL) OR ([TenSach] = @Original_TenSach)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenSach" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sach] ([TenSach]) VALUES (@TenSach);
SELECT MaSach, TenSach FROM Sach WHERE (MaSach = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaSach, TenSach FROM dbo.Sach</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sach] SET [TenSach] = @TenSach WHERE (([MaSach] = @Original_MaSach) AND ((@IsNull_TenSach = 1 AND [TenSach] IS NULL) OR ([TenSach] = @Original_TenSach)));
SELECT MaSach, TenSach FROM Sach WHERE (MaSach = @MaSach)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenSach" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenSach" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MaSach" ColumnName="MaSach" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MaSach" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaSach" DataSetColumn="MaSach" />
              <Mapping SourceColumn="TenSach" DataSetColumn="TenSach" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ViTriSachTableAdapter" GeneratorDataComponentClassName="ViTriSachTableAdapter" Name="ViTriSach" UserDataComponentName="ViTriSachTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_DA_FEATURESConnectionString1 (Settings)" DbObjectName="DB_DA_FEATURES.dbo.ViTriSach" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ViTriSach] WHERE (([MaSach] = @Original_MaSach) AND ([MaKeSach] = @Original_MaKeSach) AND ([ViTri] = @Original_ViTri))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ViTri" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ViTri" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ViTriSach] ([MaSach], [MaKeSach], [ViTri]) VALUES (@MaSach, @MaKeSach, @ViTri);
SELECT MaSach, MaKeSach, ViTri FROM ViTriSach WHERE (MaKeSach = @MaKeSach) AND (MaSach = @MaSach) AND (ViTri = @ViTri)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ViTri" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ViTri" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaSach, MaKeSach, ViTri FROM dbo.ViTriSach</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ViTriSach] SET [MaSach] = @MaSach, [MaKeSach] = @MaKeSach, [ViTri] = @ViTri WHERE (([MaSach] = @Original_MaSach) AND ([MaKeSach] = @Original_MaKeSach) AND ([ViTri] = @Original_ViTri));
SELECT MaSach, MaKeSach, ViTri FROM ViTriSach WHERE (MaKeSach = @MaKeSach) AND (MaSach = @MaSach) AND (ViTri = @ViTri)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ViTri" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ViTri" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaKeSach" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaKeSach" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ViTri" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ViTri" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaSach" DataSetColumn="MaSach" />
              <Mapping SourceColumn="MaKeSach" DataSetColumn="MaKeSach" />
              <Mapping SourceColumn="ViTri" DataSetColumn="ViTri" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet_DB_DA_FEATURES" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet_DB_DA_FEATURES" msprop:Generator_UserDSName="DataSet_DB_DA_FEATURES">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="KeSach" msprop:Generator_TableClassName="KeSachDataTable" msprop:Generator_TableVarName="tableKeSach" msprop:Generator_TablePropName="KeSach" msprop:Generator_RowDeletingName="KeSachRowDeleting" msprop:Generator_RowChangingName="KeSachRowChanging" msprop:Generator_RowEvHandlerName="KeSachRowChangeEventHandler" msprop:Generator_RowDeletedName="KeSachRowDeleted" msprop:Generator_UserTableName="KeSach" msprop:Generator_RowChangedName="KeSachRowChanged" msprop:Generator_RowEvArgName="KeSachRowChangeEvent" msprop:Generator_RowClassName="KeSachRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaKeSach" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMaKeSach" msprop:Generator_ColumnPropNameInRow="MaKeSach" msprop:Generator_ColumnPropNameInTable="MaKeSachColumn" msprop:Generator_UserColumnName="MaKeSach" type="xs:int" />
              <xs:element name="TenKeSach" msprop:Generator_ColumnVarNameInTable="columnTenKeSach" msprop:Generator_ColumnPropNameInRow="TenKeSach" msprop:Generator_ColumnPropNameInTable="TenKeSachColumn" msprop:Generator_UserColumnName="TenKeSach" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sach" msprop:Generator_TableClassName="SachDataTable" msprop:Generator_TableVarName="tableSach" msprop:Generator_TablePropName="Sach" msprop:Generator_RowDeletingName="SachRowDeleting" msprop:Generator_RowChangingName="SachRowChanging" msprop:Generator_RowEvHandlerName="SachRowChangeEventHandler" msprop:Generator_RowDeletedName="SachRowDeleted" msprop:Generator_UserTableName="Sach" msprop:Generator_RowChangedName="SachRowChanged" msprop:Generator_RowEvArgName="SachRowChangeEvent" msprop:Generator_RowClassName="SachRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaSach" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMaSach" msprop:Generator_ColumnPropNameInRow="MaSach" msprop:Generator_ColumnPropNameInTable="MaSachColumn" msprop:Generator_UserColumnName="MaSach" type="xs:int" />
              <xs:element name="TenSach" msprop:Generator_ColumnVarNameInTable="columnTenSach" msprop:Generator_ColumnPropNameInRow="TenSach" msprop:Generator_ColumnPropNameInTable="TenSachColumn" msprop:Generator_UserColumnName="TenSach" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ViTriSach" msprop:Generator_TableClassName="ViTriSachDataTable" msprop:Generator_TableVarName="tableViTriSach" msprop:Generator_TablePropName="ViTriSach" msprop:Generator_RowDeletingName="ViTriSachRowDeleting" msprop:Generator_RowChangingName="ViTriSachRowChanging" msprop:Generator_RowEvHandlerName="ViTriSachRowChangeEventHandler" msprop:Generator_RowDeletedName="ViTriSachRowDeleted" msprop:Generator_UserTableName="ViTriSach" msprop:Generator_RowChangedName="ViTriSachRowChanged" msprop:Generator_RowEvArgName="ViTriSachRowChangeEvent" msprop:Generator_RowClassName="ViTriSachRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaSach" msprop:Generator_ColumnVarNameInTable="columnMaSach" msprop:Generator_ColumnPropNameInRow="MaSach" msprop:Generator_ColumnPropNameInTable="MaSachColumn" msprop:Generator_UserColumnName="MaSach" type="xs:int" />
              <xs:element name="MaKeSach" msprop:Generator_ColumnVarNameInTable="columnMaKeSach" msprop:Generator_ColumnPropNameInRow="MaKeSach" msprop:Generator_ColumnPropNameInTable="MaKeSachColumn" msprop:Generator_UserColumnName="MaKeSach" type="xs:int" />
              <xs:element name="ViTri" msprop:Generator_ColumnVarNameInTable="columnViTri" msprop:Generator_ColumnPropNameInRow="ViTri" msprop:Generator_ColumnPropNameInTable="ViTriColumn" msprop:Generator_UserColumnName="ViTri" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:KeSach" />
      <xs:field xpath="mstns:MaKeSach" />
    </xs:unique>
    <xs:unique name="Sach_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sach" />
      <xs:field xpath="mstns:MaSach" />
    </xs:unique>
    <xs:unique name="ViTriSach_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ViTriSach" />
      <xs:field xpath="mstns:MaSach" />
      <xs:field xpath="mstns:MaKeSach" />
      <xs:field xpath="mstns:ViTri" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_KeSach_Sach" msdata:parent="KeSach" msdata:child="ViTriSach" msdata:parentkey="MaKeSach" msdata:childkey="MaKeSach" msprop:Generator_UserChildTable="ViTriSach" msprop:Generator_ChildPropName="GetViTriSachRows" msprop:Generator_UserRelationName="FK_KeSach_Sach" msprop:Generator_ParentPropName="KeSachRow" msprop:Generator_RelationVarName="relationFK_KeSach_Sach" msprop:Generator_UserParentTable="KeSach" />
      <msdata:Relationship name="FK_ViTriSach_Sach" msdata:parent="Sach" msdata:child="ViTriSach" msdata:parentkey="MaSach" msdata:childkey="MaSach" msprop:Generator_UserChildTable="ViTriSach" msprop:Generator_ChildPropName="GetViTriSachRows" msprop:Generator_UserRelationName="FK_ViTriSach_Sach" msprop:Generator_ParentPropName="SachRow" msprop:Generator_RelationVarName="relationFK_ViTriSach_Sach" msprop:Generator_UserParentTable="Sach" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>